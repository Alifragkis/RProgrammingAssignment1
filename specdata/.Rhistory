find.package("devtools")
install.packages("devtools")
library("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
getwd
getwd()
exit
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5 = 7
x<-5+7
x
y <- x - 3
y
z <- c(1.1, 9 , 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
dir(0)
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getpwd()
old.dir <- getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
dir()
file.exists()
file.exists("mytest.R")
file.info("mytest.R"")
info()
file.info("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R" to "mytest2.R")
file.rename(to "mytest2.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R" to mytest2.R)
file.rename(mytest.R to mytest2.R)
file.rename(mmytest2.R)
file.rename(mytest2.R)
file.rename(mytest.R) to file.rename(mytest2.R)
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path(folder1, folder2)
file.path(folder1)
info()
help.start()
file.path("folder1", "folder2")
?dir.create
file.path("dir.create("testdir2"")", "dir.create("testdir3", recursive=TRUE)")
file.path("dir.create("testdir2")", "dir.create("testdir3", recursive=TRUE)")
file.path(dir.create("testdir2"), dir.create("testdir3", recursive=TRUE))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
SETWD(old.dir)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10 by=0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times-40)
rep(0, times=40)
rep(c(0, 1, 2) times = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Alfs")
my_name
paste(my_name, collapse =" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
X*3
x*3
y <- rnorm(1000)
z <- rep(NA, times = 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[1, 3, 5, 7])
c(x[3, 5, 7])
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, nord =NA)
vect <- c(foo = 11, bar = 2, nord = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar, "norf)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- c[1:20]
info()
?`:`
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my-data
my_data
clas(my_data)
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
info()
bye()
exit()
exit
add2 <- function(x, y) {
x + y
}
add2(3, 5)
above <- function(x, n) {
use <- x>n
x[use]
}
above(3, 10)
x <- 1:30
above (x , 13)
above10 <- function(x){
use <- x > 10
x[use]
}
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i], na.rm = FALSE)
}
means
}
columnmean()
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i], na.rm = TRUE)
}
means
}
columnmean(airquality)
y <- 10
f <- function(x){}
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
clear()
swirl()
swirl
start
start.swirl()
swirl.start()
info()
library("swirl")
swirl()
rm(list = ls())
getwd()
setwd("C:/Users/Babis Alfs/OneDrive/Data Science Specialization/2. R Programming/specdata")
getwd()
dir()
read.csv("001.csv":"332.csv")
